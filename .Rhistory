color = "purple"
) +
ggtitle("Data Simulation (Sample Size = 2008)")
# Shape is unimodal and centered around x=0.78
# mean(data_simulation_2$x)
# What is the range of the middle 95%?
lower_bound_2 <- quantile(data_simulation_2$x, 0.025)
upper_bound_2 <- quantile(data_simulation_2$x, 0.975)
middle_range_2 <- upper_bound_2 - lower_bound_2
# Range is ~0.06
margin_of_error_2 = middle_range_2/2
# Margin of error is ~2%
# This margin of error of ~3% is better than Gallup's margin of error of 4%
####################################################################################################
margin_of_error
margin_of_error_2
gallup_data <- tibble(1004)
####################################################################################################
# Lab 10
library(tidyverse)
####################################################################################################
# Task 1: Basic Simulation
# Use rbinom() to generate data
data_simulation_1 <- tibble(x=rbinom(10000, size = 1004, prob = 0.39)) /1004
# Plot a histogram of the data
ggplot(data = data_simulation_1, aes(x = x)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Data Simulation (Sample Size = 1004)")
# Shape is unimodal and centered around x=0.39
# mean(data_simulation_1$x)
# What is the range of the middle 95%?
lower_bound <- quantile(data_simulation$x, 0.025)
####################################################################################################
# Lab 10
library(tidyverse)
####################################################################################################
# Task 1: Basic Simulation
# Use rbinom() to generate data
data_simulation_1 <- tibble(x=rbinom(10000, size = 1004, prob = 0.39)) /1004
# Plot a histogram of the data
ggplot(data = data_simulation_1, aes(x = x)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Data Simulation (Sample Size = 1004)")
# Shape is unimodal and centered around x=0.39
# mean(data_simulation_1$x)
# What is the range of the middle 95%?
lower_bound <- quantile(data_simulation_1$x, 0.025)
upper_bound <- quantile(data_simulation$_1x, 0.975)
####################################################################################################
# Lab 10
library(tidyverse)
####################################################################################################
# Task 1: Basic Simulation
# Use rbinom() to generate data
data_simulation_1 <- tibble(x=rbinom(10000, size = 1004, prob = 0.39)) /1004
# Plot a histogram of the data
ggplot(data = data_simulation_1, aes(x = x)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Data Simulation (Sample Size = 1004)")
# Shape is unimodal and centered around x=0.39
# mean(data_simulation_1$x)
# What is the range of the middle 95%?
lower_bound <- quantile(data_simulation_1$x, 0.025)
upper_bound <- quantile(data_simulation_1$x, 0.975)
middle_range <- upper_bound - lower_bound
# Range of middle 95% is ~0.06
margin_of_error = middle_range/2
# Margin of error is ~0.03
# This margin of error of ~3% is better than Gallup's margin of error of 4%
###########################################################
# Task 1 Part 2: Repeat Simulation for Double Sample Size
data_simulation_2 <- tibble(x=rbinom(10000, size = 1004*2, prob = 0.39)) /(1004*2)
# Plot a histogram of the data
ggplot(data = data_simulation_2, aes(x = x)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Data Simulation (Sample Size = 2008)")
# Shape is unimodal and centered around x=0.78
# mean(data_simulation_2$x)
# What is the range of the middle 95%?
lower_bound_2 <- quantile(data_simulation_2$x, 0.025)
upper_bound_2 <- quantile(data_simulation_2$x, 0.975)
middle_range_2 <- upper_bound_2 - lower_bound_2
# Range is ~0.06
margin_of_error_2 = middle_range_2/2
# Margin of error is ~2%
# This margin of error of ~2% is about equal to Gallup's margin of error of 2%
####################################################################################################
# Task 2: Resampling
# Create a df containing data from Gallup Survey
gallup_data <- tibble(1004)
margin_of_error_2
margin_of_error
view(gallup_data)
View(data_simulation_1)
gallup_data <- tibble(
response = c("Satisfied", "Dissatisfied", "No Opinion"),
percentage = c(39, 59, 2)
)
View(gallup_data)
View(gallup_data)
gallup_data <- tibble("1", "2", "0")
View(gallup_data)
gallup_data <- tibble(1,2,0)
View(gallup_data)
gallup_data <- tibble(1 = "Satisfied",2,0)
gallup_data <- tibble("Satisfied",2,0)
View(gallup_data)
gallup_data <- tibble(1:1004)
View(gallup_data)
gallup_data <- tibble(
response = c(rep(1, 592), rep(2, 391), rep(0, 20))
)
View(gallup_data)
gallup_data <- tibble(
response = c(rep(1, 592), rep(2, 392), rep(0, 20))
)
gallup_data <- tibble(
response = sample(c(rep(1, 592), rep(2, 391), rep(0, 20)))
)
View(gallup_data)
####################################################################################################
# Lab 10
library(tidyverse)
####################################################################################################
# Task 1: Basic Simulation
# Use rbinom() to generate data
data_simulation_1 <- tibble(x=rbinom(10000, size = 1004, prob = 0.39)) /1004
# Plot a histogram of the data
ggplot(data = data_simulation_1, aes(x = x)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Data Simulation (Sample Size = 1004)")
# Shape is unimodal and centered around x=0.39
# mean(data_simulation_1$x)
# What is the range of the middle 95%?
lower_bound <- quantile(data_simulation_1$x, 0.025)
upper_bound <- quantile(data_simulation_1$x, 0.975)
middle_range <- upper_bound - lower_bound
# Range of middle 95% is ~0.06
margin_of_error = middle_range/2
# Margin of error is ~0.03
# This margin of error of ~3% is better than Gallup's margin of error of 4%
###########################################################
# Task 1 Part 2: Repeat Simulation for Double Sample Size
data_simulation_2 <- tibble(x=rbinom(10000, size = 1004*2, prob = 0.39)) /(1004*2)
# Plot a histogram of the data
ggplot(data = data_simulation_2, aes(x = x)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Data Simulation (Sample Size = 2008)")
# Shape is unimodal and centered around x=0.78
# mean(data_simulation_2$x)
# What is the range of the middle 95%?
lower_bound_2 <- quantile(data_simulation_2$x, 0.025)
upper_bound_2 <- quantile(data_simulation_2$x, 0.975)
middle_range_2 <- upper_bound_2 - lower_bound_2
# Range is ~0.06
margin_of_error_2 = middle_range_2/2
# Margin of error is ~2%
# This margin of error of ~2% is about equal to Gallup's margin of error of 2%
####################################################################################################
# Task 2: Resampling
# Create a df containing data from Gallup Survey
gallup_data <- tibble(
response = c(rep(1, 592), rep(2, 391), rep(0, 20))
)
View(gallup_data)
mean(gallup_data==1)
mean(gallup_data==1)
mean(gallup_data==2)
mean(gallup_data==0)
gallup_data <- tibble(
response = c(rep(1, 592), rep(2, 391), rep(0, 20)) /1004
)
# Plot a histogram of the data
ggplot(data = gallup_data, aes(x = x)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Gallup Data")
# Plot a histogram of the data
ggplot(data = gallup_data, aes(x = response)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Gallup Data")
gallup_data <- tibble(
response = c(rep(1, 592), rep(2, 391), rep(0, 20))
)
# Plot a histogram of the data
ggplot(data = gallup_data, aes(x = response)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Gallup Data")
################################################################################
# LECTURE 17 R CODE
# CIPOLLI
# MATH 240 - SPRING 2025
################################################################################
library(tidyverse)
library(patchwork)
library(nleqslv)
################################################################################
# What is a resample?
################################################################################
samp.size <- 100
og.sample <- tibble(id          = 1:samp.size,
measurement = rnorm(samp.size))
og.sample |>
summarize(mean = mean(measurement),
sd = sd(measurement))
# Collect a random resample
resample <- sample(x = 1:samp.size,
size = samp.size,
replace = T)
# The summary is "close" but not the same
og.sample[resample,] |>
summarize(mean = mean(measurement),
sd = sd(measurement))
################################################################################
# Google Maps Data (Bernoulli)
################################################################################
dat.computer <- read_csv(file="computerdata.csv")|> # Load Data
filter(app == "Google Maps") |>                   # Filter Observations for Google Maps
filter(hc == FALSE) |>                            # Look at normal (not high contrast) images
filter(stimulus == "/Google Maps/GM1_ref.png")    # Pick one of the screenshots
################################################################################
# LECTURE 17 R CODE
# CIPOLLI
# MATH 240 - SPRING 2025
################################################################################
library(tidyverse)
library(patchwork)
library(nleqslv)
################################################################################
# What is a resample?
################################################################################
samp.size <- 100
og.sample <- tibble(id          = 1:samp.size,
measurement = rnorm(samp.size))
og.sample |>
summarize(mean = mean(measurement),
sd = sd(measurement))
# Collect a random resample
resample <- sample(x = 1:samp.size,
size = samp.size,
replace = T)
# The summary is "close" but not the same
og.sample[resample,] |>
summarize(mean = mean(measurement),
sd = sd(measurement))
og.sample
View(og.sample)
resample
# Create a df containing data from Gallup Survey
gallup_data <- tibble(
response = c(rep(1, 592), rep(2, 391), rep(0, 20))
)
# Perform Resampling
resample <- sample(x = 1:samp.size,
size = samp.size,
replace = T)
resample
resample <- sample(x = 1:1004,
size = 1004,
replace = T)
resample
resample_data <- tibble() |>
resample <- sample(x = 1:1004,
size = 1004,
replace = T)
resample_data <- tibble(resample)
View(resample_data)
# Plot a histogram of the data
ggplot(data = resample_data, aes(x = x)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Resample Data")
# Plot a histogram of the data
ggplot(data = resample_data, aes(x = resample)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Resample Data")
resample <- sample(x = 1:1004,
size = 1004,
replace = T) /1004
resample_data <- tibble(resample)
# Plot a histogram of the data
ggplot(data = resample_data, aes(x = resample)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Resample Data")
View(resample_data)
gallup_data <- tibble(
response = c(rep(1, 592), rep(2, 391), rep(0, 20))
)
# Perform Resampling
resample <- sample(gallup_data = 1:1004,
size = 1004,
replace = T) /1004
# Perform Resampling
resample <- sample(x = gallup_data$response,
size = 1004,
replace = T)
resample
gallup_data <- tibble(
response = c(rep(1, 319), rep(2, 592), rep(0, 20))
)
# Perform Resampling
resample <- sample(x = gallup_data$response,
size = 1004,
replace = T)
#proportion(sample)?
resample_data <- tibble(resample)
# Plot a histogram of the data
ggplot(data = resample_data, aes(x = resample)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Resample Data")
resample
resample_data <- tibble(resample) |>
summarize(resample_data)
proportion_of_1s <- mean(gallup_data$response == 1)
proportion_of_1s
# Perform Resampling
R = 10000
for( i in 1:R){
# Take a resample
resample <- sample(x = gallup_data$response,
size = 1004,
replace = T)
resample_data <- tibble(resample)
# Get Proportion
proportion_of_1s <- mean(gallup_data$response == 1)
}
View(resample_data)
# Perform Resampling
R = 10000
for( i in 1:R){
# Take a resample
resample <- sample(x = gallup_data$response,
size = 1004,
replace = T)
resample_data <- tibble(resample)
# Get Proportion
proportion_data <- tibble(proportion_of_1s <- mean(gallup_data$response == 1))
}
#resample_data <- tibble(resample)
# Get Proportion
#proportion_data <- tibble(proportion_of_1s = mean(gallup_data$response == 1))
mean(resample==1)
R = 10000
resamples <- tibble(p.hat = numeric(R))
for( i in 1:R){
# Take a resample
resample <- sample(x = gallup_data$response,
size = 1004,
replace = T)
#resample_data <- tibble(resample)
# Get Proportion
#proportion_data <- tibble(proportion_of_1s = mean(gallup_data$response == 1))
resamples$p.hat <- mean(resample==1)
}
view(resamples)
mean(resample==1)
# Perform Resampling
R = 10000
resamples <- tibble(p.hat = numeric(R))
for( i in 1:R){
# Take a resample
resample <- sample(x = gallup_data$response,
size = 1004,
replace = T)
#resample_data <- tibble(resample)
# Get Proportion
#proportion_data <- tibble(proportion_of_1s = mean(gallup_data$response == 1))
resamples$p.hat[i] <- mean(resample==1)
}
View(resamples)
# Plot a histogram of the resampling data
ggplot(data = resamples, aes(x = p.hat)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Resampling Data")
# Plot a histogram of the resampling data
ggplot(data = resamples, aes(x = p.hat)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Resampling Data")
# Perform Resampling
R = 10000
resamples <- tibble(p.hat = numeric(R))
for( i in 1:R){
# Take a resample
resample <- sample(x = gallup_data$response,
size = 1004,
replace = T)
resamples$p.hat[i] <- mean(resample==1)
}
# Plot a histogram of the resampling data
ggplot(data = resamples, aes(x = p.hat)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Resampling Data")
# Perform Resampling
R = 10000
resamples <- tibble(p.hat = numeric(R))
for( i in 1:R){
# Take a resample
resample <- sample(x = gallup_data$response,
size = 1004,
replace = T)
resamples$p.hat[i] <- mean(resample==1)
}
# Plot a histogram of the resampling data
ggplot(data = resamples, aes(x = p.hat)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Resampling Data")
gallup_data <- tibble(
response = c(rep(1, 392), rep(2, 592), rep(0, 20))
)
# Perform Resampling
R = 10000
resamples <- tibble(p.hat = numeric(R))
for( i in 1:R){
# Take a resample
resample <- sample(x = gallup_data$response,
size = 1004,
replace = T)
resamples$p.hat[i] <- mean(resample==1)
}
# Plot a histogram of the resampling data
ggplot(data = resamples, aes(x = p.hat)) +
geom_histogram(
aes(y = ..density..),
) +
geom_density(
color = "purple"
) +
ggtitle("Resampling Data")
mean(resample_data$p.hat)
